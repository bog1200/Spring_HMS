package com.example.appointment_module.services;import com.example.appointment_module.domain.Appointment;import com.example.appointment_module.repositories.AppointmentRepository;import jakarta.persistence.EntityManager;import jakarta.persistence.PersistenceContext;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashSet;import java.util.List;import java.util.Optional;import java.util.Set;@Servicepublic class AppointmentServiceImpl implements AppointmentService {    @Autowired    private AppointmentRepository appointmentRepository;    @PersistenceContext    private EntityManager em;    @Override    public List<Appointment> findAll() {        return (List<Appointment>) appointmentRepository.findAll();    }    @Override    public Optional<Appointment> findById(Long id) {        return appointmentRepository.findById(id);    }    @Override    public Optional<Set<Appointment>> findStartingAppointments() {       // query to find all appointments starting in next minute        Set<Appointment> appointments = new HashSet<>(em.createQuery("SELECT a FROM Appointment a WHERE a.timestamp BETWEEN CURRENT_TIMESTAMP AND CURRENT_TIMESTAMP + 1 MINUTE")                .getResultList());        return Optional.of(appointments);    }    @Override    public Appointment save(Appointment appointment) {        return appointmentRepository.save(appointment);    }    @Override    public Appointment update(Appointment appointment) {        return appointmentRepository.save(appointment);    }    @Override    public void delete(Long id) {        appointmentRepository.deleteById(id);    }    @Override    public Set<Appointment> findByPatientId(Long id) {        return new HashSet<>(em.createQuery("SELECT a FROM Appointment a WHERE a.idPatient = :id")                .setParameter("id", id)                .getResultList());    }    @Override    public Set<Appointment> findByDoctorId(Long id) {        return new HashSet<>(em.createQuery("SELECT a FROM Appointment a WHERE a.idDoctor = :id")                .setParameter("id", id)                .getResultList());    }}