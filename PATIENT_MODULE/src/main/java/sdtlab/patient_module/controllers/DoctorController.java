package sdtlab.patient_module.controllers;import sdtlab.patient_module.domain.Doctor;import sdtlab.patient_module.services.DoctorService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;import java.util.Optional;@RestController@RequestMapping("/doctors")public class DoctorController {    private final DoctorService doctorService;    @Autowired    public DoctorController(DoctorService doctorService) {        this.doctorService = doctorService;    }    @GetMapping("/")    public List<Doctor> getAllDoctors() {        return doctorService.findAll();    }    @GetMapping("/{id}")    public ResponseEntity<Doctor> getDoctorById(@PathVariable Long id) {        Optional<Doctor> doctor = doctorService.findById(id);        return doctor.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());    }    @PostMapping    public Doctor createDoctor(@RequestBody Doctor doctor) {        return doctorService.save(doctor);    }    @PutMapping("/{id}")    public ResponseEntity<Doctor> updateDoctor(@PathVariable Long id, @RequestBody Doctor doctor) {        if (!doctorService.findById(id).isPresent()) {            return ResponseEntity.notFound().build();        }        doctor.setId(id);        return ResponseEntity.ok(doctorService.update(doctor));    }    @DeleteMapping("/{id}")    public ResponseEntity<Void> deleteDoctor(@PathVariable Long id) {        if (!doctorService.findById(id).isPresent()) {            return ResponseEntity.notFound().build();        }        doctorService.delete(id);        return ResponseEntity.noContent().build();    }}